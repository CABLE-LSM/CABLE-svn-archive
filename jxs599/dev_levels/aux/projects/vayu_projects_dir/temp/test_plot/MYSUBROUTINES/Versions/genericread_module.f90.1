   
    module fundamental_parameters 
       integer, parameter :: ok=0
       integer :: openstatus
   end module  

   module genericread_module
      interface readGamma
         module procedure readGammaX,readGamma_Srb
      end interface 
      contains
         subroutine readGammaX(filename,N,whereto)
            use fundamental_parameters
            implicit none
               character (len=*) :: filename
               integer :: N,altest,i
               real, pointer :: whereto(:)
                  nullify(whereto)
                  allocate (whereto(N),stat=altest)
                  open(unit=1,file=filename,&
               &  status="old",action="read",iostat=openstatus)
                  if(openstatus==ok) then
                     read (1,*) whereto
                  else
                    print *, filename,'NOT found'
                    stop
                  endif
                  close(1)
            return 
         end subroutine
!whereto(i)=1
!enddo
!print *,"here"
         subroutine readGamma_Srb(filename,N,whereto,fesc)
            use fundamental_parameters
            implicit none
               character (len=*) :: filename
               integer :: N,altest,i
               real, pointer :: whereto(:)
               real ::fesc,temp 
                 allocate (whereto(N),stat=altest)
                  open(unit=1,file=filename,&
               &  status="old",action="read",iostat=openstatus)
                  if(openstatus==ok) then
                     do i=1,N
                        read (1,*),temp
                        whereto(i)=fesc*temp
                     enddo
                  else
                    print *, filename,'NOT found'
                    stop
                  endif
                  close(1)
            return 
         end subroutine






   end module genericread_module




