!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!  this program is used to read data from a file.         !!!!!!
!!!!!!  this program is made to be as generic as possible,     !!!!!!
!!!!!!  but requires some input information such as file       !!!!!!
!!!!!!  name and size.                                         !!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      PROGRAM plot
      use Program_specific_basic_data, only : beenthere 
      implicit none
      integer :: N,i
      real*8, pointer :: xdata(:), ydata(:)
      real, dimension (:),allocatable :: xplot, yplot
            N=29
            call Readfiles("Output/ixout1",N,xdata,"Output/iout1",N,ydata)
            allocate(xplot(N)); allocate(yplot(N))
              xplot=xdata; yplot=ydata
              write (*,fmt=10),xdata
   10          format(F9.6)  
            call Plotxy(N,xplot,yplot)
            nullify (xdata); nullify (ydata)
            deallocate(xplot); deallocate(yplot)
            beenthere=.false.
      stop 
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      contains
            subroutine Readfiles(filenamex,Nfilex,wheretox,filenamey,Nfiley,wheretoy)
            use Program_specific_basic_data 
            implicit none
              character (len=*) :: filenamex,filenamey
              integer :: Nfilex,Nfiley,i
              logical :: j    
              real*8, pointer :: wheretox(:),wheretoy(:)
!                  j=(associated(wheretox))
!                  print *,j
                  call Readfile(filenamex,Nfilex,wheretox)
                  call Readfile(filenamey,Nfiley,wheretoy)
            return 
            end subroutine
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
            subroutine Readfile(filename,Nfile,whereto)
            use Fundamental_parameters, only : ok, openstatus
            use Program_specific_basic_data
            implicit none
              character (len=*) :: filename
              integer :: Nfile
              real*8, pointer :: whereto(:)
              integer :: altest,i,chtest
                  chtest=len_trim(filename)
                  allocate (whereto(Nfile),stat=altest)
                  open(unit=1,file=filename,&
     &            status="old",action="read",iostat=openstatus)
                  if(openstatus==ok) then
                      read (1,*) whereto
                  else
                    print *, filename,'NOT found'
                    stop
                  endif
                  close(1)
              return
            end subroutine
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      end program plot
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      subroutine Plotxy(N,x,y)
      use Program_specific_basic_data, only : beenthere 
      implicit none
        integer :: N
        real, dimension (N):: x, y
        logical, pointer :: breadcrumbs
            breadcrumbs=>beenthere
            if(.not.beenthere) then
              beenthere=.true.
              call plot_setup(N,x,y)
            endif
            call plot_caller(N,x,y)
            call pgend
        return
      end subroutine
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      SUBROUTINE plot_setup(N,x,y)
      use Program_specific_basic_data, only : xmin,xmax,ymin,ymax 
      implicit none
        integer :: N,i
        real, dimension (N):: x, y
        real ::  ixmin=10000,ixmax=0,iymin=10000,iymax=0
            do i=1,N
              if (x(i)<ixmin) then
                ixmin=x(i) 
              endif     
              if (x(i)>ixmax) then
                ixmax=x(i) 
              endif     
              if (y(i)<iymin) then
                iymin=y(i) 
              endif     
              if (y(i)>iymax) then
                iymax=y(i) 
              endif     
              xmin=ixmin; xmax=ixmax
              ymin=iymin; ymax=iymax
            enddo
            call pgbeg(0,"/xs",1,1)  
            call pgpage()
            call pgsvp(.1,.9,.1,.9);
            call pgsch(1.5)
            call pgmtxt('B',2.0,0.5,0.5,'test')
            call pgswin(xmin,xmax,ymin,ymax)  
            call pgbox('BNCST', 0.0, 0, 'BSTNC', 0.0,0)  
            call pgmtxt('T',2,0.5,0.5,&
     &      "Transmission measurements: 19 quasars")
            call pgmtxt('B',2,0.5,0.5,"z\\dobs\\u")
            call pgmtxt('L',4,0.5,0.5,"Transmission")
            call pgslw(1); call pgsci(2)
      return
      end SUBROUTINE plot_setup
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      SUBROUTINE plot_caller(N,x,y)
      implicit none
        integer :: N
        real, dimension (N):: x, y
            call pgline(N,x,y)
      return
      end SUBROUTINE plot_caller
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!








!
