######################################################################################
### this script writes the namelist (cable.nml) which is required to subsequently  ###
### run CABLE over selected sites. this script is called by run_cable.csh in the   ###
### previous directory and reads the established parameters in main.nml            ###
######################################################################################

source('../main.nml')
library(ncdf) # load netcdf library

cnlist=c() # initialise CABLE namelist
for(site in 1:length(obsfiles)) { # for each site
   newdirname= paste( 'out/', sitenames[site], sep="")
   setwd('../')
   system(paste('mkdir',newdirname)) # create new directory
   # Prepare CABLE namelist:
   cnlist[1] = '&cable'
   cnlist[2] = paste('  filename_met = \'', '' ,obsfiles[site],'\'',sep='')
   cnlist[3] = '  filename_out = \'out_cable.nc\''
   cnlist[4] = '  filename_log = \'log_cable.txt\''
   cnlist[5] = '  filename_restart_in = \'restart/Tumbarumba/restart_out.nc\''
   cnlist[6] = '  filename_restart_out = \'./restart_out.nc\''
   cnlist[7] = '  filename_LAI     = \'../data/surface_data/LAI_Monthly_Global.nc\''
   cnlist[8] = '  filename_type    = \'../data/surface_data/gridinfo1992_igbp.txt\''
   cnlist[9] = '  filename_veg     = \'../data/surface_data/def_veg_params_igbp.txt\''
   cnlist[10] = '  filename_soil    = \'../data/surface_data/def_soil_params.txt\''
   cnlist[11] = '  vegparmnew = .TRUE.  ! using new format when true'
   cnlist[12] = '  spinup = .FALSE.  ! do we spin up the model?'
   cnlist[13] = '  delsoilM = 0.001   ! allowed variation in soil moisture for spin up'
   cnlist[14] = '  delsoilT = 0.01    ! allowed variation in soil temperature for spin up'
   cnlist[15] = '  output%restart = .FALSE.  ! should a restart file be created?'
   cnlist[16] = '  output%met = .TRUE.  ! input met data'
   cnlist[17] = '  output%flux = .TRUE.  ! convective, runoff, NEE'
   cnlist[18] = '  output%soil = .TRUE.  ! soil states'
   cnlist[19] = '  output%snow = .TRUE.  ! snow states'
   cnlist[20] = '  output%radiation = .TRUE.  ! net rad, albedo'
   cnlist[21] = '  output%carbon    = .TRUE.  ! NEE, GPP, NPP, stores' 
   cnlist[22] = '  output%veg       = .TRUE.  ! vegetation states'
   cnlist[23] = '  output%params    = .TRUE.  ! input parameters used to produce run'
   cnlist[24] = '  output%balances  = .TRUE.  ! energy and water balances'
   cnlist[25] = '  output%patch = .TRUE.  ! should variables for each patch be written to output?'
   cnlist[26] = '  output%grid = \'default\' ! default->use met file grid; can choose to force with land, mask, or ALMA'
   cnlist[27] = '  patch%Qle        = .TRUE.  ! write this var with patch-specific info'
   cnlist[28] = '  check%ranges     = .TRUE.  ! variable ranges, input and output' # not for LittleWashita
   cnlist[29] = '  check%energy_bal = .TRUE.  ! energy balance'
   cnlist[30] = '  check%mass_bal   = .TRUE.  ! water/mass balance'
   cnlist[31] = '  verbose = .TRUE. ! write details of every grid cell init and params to log?'
   cnlist[32] = '  leaps = .FALSE. ! calculate timing with leap years?'
   cnlist[33] = '  logn = 88      ! log file number - declared in input module'
   cnlist[34] = '  fixedCO2 = 350.0   ! if not found in met file, in ppmv'
   cnlist[35] = '&end'
   write(cnlist,'cable.nml')
   # Run CABLE
   print(paste('Running CABLE at ',sitenames[site],':',sep=''))
   system('./cable') # Will run CABLE
   setwd( paste( newdirname,sep='' ) ) # cd to new directory
   # save a copy of the output
   file.copy('../../out_cable.nc','out_cable.nc')
   file.copy('../../out_cable.nc','old_cable.nc')
   file.copy('../../log_cable.txt','log_cable.txt')
   file.copy('../../restart_out.nc','restart_out.nc')
   setwd('../../src/')
}

