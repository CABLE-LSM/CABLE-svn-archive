jtk561(Jatin.Kala.JK@gmail.com)
CableDyn25b.f90 is part of the BIOS2 source code develloped by Vanessa Haverd et al.
Part of this code does "weather generation" using various gridded observations
from the BoM as input, and produces the inputs required to run CABLE within BIOS2.
See Appendix C1 and C2 of:
http://www.biogeosciences.net/10/2011/2013/bg-10-2011-2013.html

The purpose of this project is to extract the parts of CableDyn25b.f90 which 
does weather generation and write the outputs to ALMA netcdf for use in 
stand-alone CABLE.

The input data-sets from the BoM are here:
/g/data1/fj2/AWAP/rain
                 /tmax
                 /tmin
                 /rad
                 /vp09
                 /vp03

For access to these data, please contact: Luigi Renzullo <Luigi.Renzullo@csiro.au>
                                        : Brad Evans <bradley.evans@mq.edu.au>

Please Read the paper for various assumptions made by the code.

Things that still need to do:
1. Write the "time" to be CF-Compliant
2. Acutually do a proper CF-compliance check via something like:
http://puma.nerc.ac.uk/cgi-bin/cf-checker.pl
3. Sanity check the outputs!
4. Code could be made more efficient, e.g., only Latitudes used from the VV array 

Note that a near-surface wind climatology for Australia exists:
http://dx.doi.org/10.4225/08/53A0E131E9171
This could potentially be used?

The modified code is in the "MetForcing-Only" directory.
The modules have been spereated into individual files to make things easier.

Explanation of files in MetForcing-Only dir:
1. compile.sh:
	This compiles the code and creates an exe called run_prog
 
2. run_prog.f90:
	This is the main program which takes as "command line inputs" a date, and the code "generates"
        diurnal weather for that date. See "HOW TO USE" section.

3. GetSubDiurnalMetModule.f90:
       This calls the main program which carries out the weather generation 

4. SubDiurnalMetModule.f90:
	This does the actual weather generation, called by GetSubDiurnalMetModule.f90

5. GlobalDefs.f90:
	This is a new module i created to pre-define delT (frequency of inut obs), 
        np (number of elemets from input), and ntime (desired di-urnalization freq)

6. Constants.f90, DateFunctions.f90, TypeDef.f90, Utils.f90, Pointer.f90:
	Various MODULES which which are needed by SubDiurnalMetModule.f90
 	and GetSubDiurnalMetModule.f90

7. fileio_module.f90:
	A new module containing routines to read and write the data

IMPORTANT NOTES:
The IO part of this code is also hard coded to read the Bom data at /g/data1/fj2/AWAP/, and
assumes a particular directory structure and file format. If this code is to be used using
inputs from other sources, changes will need to be made to GlobalDefs.f90 and
fileio_module.f90, and run_prog.f90. The rest of the code should not need any
changes, unless you want to change the weather generation part of the code.

HOW TO USE:
1. run ./compile.sh - will need minor edits if not running on raijin
2. ./run_prog yyyy mm day - will generater weather for a user specified year, month, and day, output will be written in the current directory. Note that the code will extract data for this day, the previous, and the next, so, this data must exist.
e.g:
./run_prog 2000 1 31
Will generate weather for 31st Jan 2000
